<?php

namespace Tests\Util;

use App\Util\CacheUtil;
use Doctrine\Common\Cache\FilesystemCache;
use PHPUnit\Framework\Assert;
use PHPUnit\Framework\TestCase;

class CacheUtilTest extends TestCase
{
    /**
     * @var CacheUtil
     */
    private $cache;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->cache = new CacheUtil(new FilesystemCache(__DIR__.'/../../vars/cache'));
    }

    public function testSet(): void
    {
        $this->cache->set('key', 'OK', 10);
        Assert::assertEquals('OK', $this->cache->get('key'));
    }

    public function testGet(): void
    {
        $this->cache->set('key', 'OK');
        Assert::assertEquals('OK', $this->cache->get('key'));
    }

    public function testHas(): void
    {
        $this->cache->set('key', 'OK');
        Assert::assertTrue($this->cache->has('key'));
        $this->cache->delete('key');
        Assert::assertFalse($this->cache->has('key'));
    }

    public function testDelete(): void
    {
        $this->cache->set('key', 'OK');
        Assert::assertTrue($this->cache->has('key'));
        $this->cache->delete('key');
        Assert::assertFalse($this->cache->has('key'));
    }

    /**
     * 测试重设缓存值时，是否会修改过期时间.
     * 结论：会刷新缓存的时间，其他缓存系统也都是如此实现的.
     */
    public function testExpire(): void
    {
        $this->cache->set('key', 'OK', 300);
        $this->cache->set('key', 'Second-1');
    }
}
